{"path":"components/expansion-panel","templateID":7,"sharedPropsHashes":{},"localProps":{"component":{"name":"Expansion Panel","url":"expansion-panel","componentKey":"expansion-panel","editorHeight":"900px","wrapperStyle":{"width":"100%"},"description":"Expansion panels allow you to place details in a container that is initially hidden, but can be opened by the user.","component":"src/components/component-doc"},"markdown":"## Usage\n\n```jsx\nimport { ExpansionPanel } from 'materialish';\nimport 'materialish/materialish.css';\n```\n\n# `ExpansionPanel`\n\n## Props\n\n| Prop Name | Default Value | Description                                                         |\n| --------- | ------------- | ------------------------------------------------------------------- |\n| className |               | Additional class name(s) to add to the menu                         |\n| open      | false         | Whether or not this ExpansionPanel is expanded                      |\n| children  |               | A single `ExpansionPanel.Header` and a single `ExpansionPanel.Body` |\n| ...rest   |               | Other props are placed on the root element                          |\n\n## CSS Variables\n\n| Variable          | Default Value | Description                      |\n| ----------------- | ------------- | -------------------------------- |\n| --mt-baseFontSize | 1rem          | The size of text within the menu |\n| --mt-fontFamily   | 'Roboto'      | The font family to use for text  |\n\n# `ExpansionPanel.Header`\n\n## Props\n\n| Prop Name | Default Value | Description                                                    |\n| --------- | ------------- | -------------------------------------------------------------- |\n| className |               | Additional class name(s) to add to the panel header            |\n| children  |               | The content to display in the header of the expansion panel    |\n| ...rest   |               | Other props are placed on the root element of the panel header |\n\n# `ExpansionPanel.Body`\n\n## Props\n\n| Prop Name | Default Value | Description                                                                                                  |\n| --------- | ------------- | ------------------------------------------------------------------------------------------------------------ |\n| className |               | Additional class name(s) to add to the panel body                                                            |\n| children  |               | The content to display in the body of the expansion panel                                                    |\n| open      | _inherited_   | Whether or not the panel is open. This value is inherited from the parent, so you do not need to provide it. |\n| ...rest   |               | Other props are placed on the root element of the panel body                                                 |\n","example":"class ExpansionPanelExample extends Component {\n  render() {\n    // Pass a `panelId` to toggle whether it is open or closed.\n    const togglePanel = panelId => {\n      this.setState(prevState => {\n        return {\n          [panelId]: !prevState[panelId],\n        };\n      });\n    };\n\n    return (\n      <div>\n        <ExpansionPanel\n          open={this.state.one}\n          onClick={() => togglePanel('one')}>\n          <ExpansionPanel.Header>Expansion Panel One</ExpansionPanel.Header>\n          <ExpansionPanel.Body>\n            <p style={{ margin: 0 }}>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              Pellentesque fermentum sed magna quis interdum. Suspendisse vitae\n              lobortis odio, a accumsan purus. Vivamus suscipit magna et nisl\n              mattis vestibulum. Donec interdum leo elementum eros fringilla, ut\n              varius velit volutpat. In porttitor tempus purus id lacinia.\n              Phasellus vitae blandit tellus, fermentum dictum libero.\n            </p>\n          </ExpansionPanel.Body>\n        </ExpansionPanel>\n        <ExpansionPanel\n          open={this.state.two}\n          onClick={() => togglePanel('two')}>\n          <ExpansionPanel.Header>Expansion Panel Two</ExpansionPanel.Header>\n          <ExpansionPanel.Body>\n            <p style={{ margin: 0 }}>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              Pellentesque fermentum sed magna quis interdum. Suspendisse vitae\n              lobortis odio, a accumsan purus. Vivamus suscipit magna et nisl\n              mattis vestibulum. Donec interdum leo elementum eros fringilla, ut\n              varius velit volutpat. In porttitor tempus purus id lacinia.\n              Phasellus vitae blandit tellus, fermentum dictum libero. Nullam\n              lacus leo, convallis ut mattis non, luctus eu tellus.\n            </p>\n          </ExpansionPanel.Body>\n        </ExpansionPanel>\n        <ExpansionPanel\n          open={this.state.three}\n          onClick={() => togglePanel('three')}>\n          <ExpansionPanel.Header>Expansion Panel Three</ExpansionPanel.Header>\n          <ExpansionPanel.Body>\n            <p style={{ margin: 0 }}>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              Pellentesque fermentum sed magna quis interdum. Suspendisse vitae\n              lobortis odio, a accumsan purus.\n            </p>\n          </ExpansionPanel.Body>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n\n  state = {\n    one: false,\n    two: false,\n    three: false,\n  };\n}\n\nreturn <ExpansionPanelExample />;\n"}}
