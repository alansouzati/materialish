{"path":"components/progress-bar","templateID":7,"sharedPropsHashes":{"parentComponent":"ZPH9bt"},"localProps":{"component":{"name":"Progress Bar","url":"progress-bar","componentKey":"progress-bar","description":"Progress bars can represent nondeterministic and deterministic processes.","component":"src/components/component-doc","wrapperStyle":{"width":"250px"},"materialDocsLink":"https://material.io/design/components/progress-indicators.html#linear-progress-indicators"},"markdown":"## Usage\n\n```jsx\nimport { ProgressBar } from 'materialish';\nimport 'materialish/materialish.css';\n```\n\n## Props\n\n| Prop Name     | Default Value | Description                                                                                               |\n| ------------- | ------------- | --------------------------------------------------------------------------------------------------------- |\n| loaded        | 0             | How much has loaded; must be a number between 0 and 100. Only required when `indeterminate` is `false`.   |\n| buffered      | 100           | How much has buffered; must be a number between 0 and 100. Only required when `indeterminate` is `false`. |\n| indeterminate | false         | Pass `true` for this bar to represent an indeterminate process.                                           |\n| ...rest       |               | Other props are placed on the root element                                                                |\n\n## CSS Variables\n\n| Variable                         | Default Value                | Description                                                    |\n| -------------------------------- | ---------------------------- | -------------------------------------------------------------- |\n| --mt-baseFontSize                | 1rem                         | The dimensions of the progress bar are based off of this value |\n| --mt-progressBar-backgroundColor | var(--mt-mainColor, #2196f3) | The color of the progress bar                                  |\n","example":"class ProgressBarExample extends Component {\n  render() {\n    return (\n      <Fragment>\n        <ProgressBar buffered={90} loaded={20} />\n        <br />\n        <ProgressBar indeterminate />\n      </Fragment>\n    );\n  }\n}\n\nreturn <ProgressBarExample />;\n"}}
