{"path":"components/input","templateID":7,"sharedPropsHashes":{"parentComponent":"2hCE74"},"localProps":{"component":{"name":"Input","url":"input","componentKey":"input","editorHeight":"350px","description":"An input is a standalone text input that allows a user to provide or edit a text value.","component":"src/components/component-doc","materialDocsLink":"https://material.io/design/components/text-fields.html"},"markdown":"## Usage\n\n```jsx\nimport { Input } from 'materialish';\nimport 'materialish/materialish.css';\n```\n\n## Props\n\n| Prop Name | Default Value | Description                                                                                       |\n| --------- | ------------- | ------------------------------------------------------------------------------------------------- |\n| className |               | Additional class name(s) to add to the input                                                      |\n| error     | false         | Whether or not the input is in an invalid state                                                   |\n| nodeRef   |               | Pass a [ref](https://reactjs.org/docs/refs-and-the-dom.html) to get access to the `input` element |\n| ...rest   |               | Other props are placed on the root `input` element                                                |\n\n## CSS Variables\n\n| Variable                    | Default Value           | Description                                                           |\n| --------------------------- | ----------------------- | --------------------------------------------------------------------- |\n| --mt-baseFontSize           | 1rem                    | The text size and dimensions of the input are based off of this value |\n| --mt-fontFamily             | 'Roboto'                | The font family to use for the input text                             |\n| --mt-input-focusBorderColor | --mt-mainColor, #4a8fe2 | The border color to use when the input is focused                     |\n","example":"class InputExample extends Component {\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        onChange={e => this.setState({ value: e.target.value })}\n      />\n    );\n  }\n\n  state = {\n    value: 'Paris, France',\n  };\n}\n\nreturn <InputExample />;\n"}}
